@page "/login"
@using SalaryAdvanced.Application.DTOs
@using SalaryAdvanced.Application.Interfaces
@using Microsoft.AspNetCore.Components.Authorization
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider
@inject IJSRuntime JSRuntime

<PageTitle>Đăng nhập - Hệ thống Tạm ứng Lương</PageTitle>

<div class="container-fluid vh-100 d-flex align-items-center justify-content-center bg-light">
    <div class="row w-100 justify-content-center">
        <div class="col-md-6 col-lg-4">
            <div class="card shadow-lg border-0 rounded-lg">
                <div class="card-header bg-primary text-white text-center py-4">
                    <h3 class="fw-light mb-3">Đăng nhập</h3>
                    <small>Hệ thống Quản lý Tạm ứng Lương</small>
                </div>
                
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @errorMessage
                            <button type="button" class="btn-close" @onclick="ClearError"></button>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @successMessage
                            <button type="button" class="btn-close" @onclick="ClearSuccess"></button>
                        </div>
                    }

                    <form method="post" action="/login">
                        <div class="form-floating mb-3">
                            <input name="Email" 
                                   value="@loginModel.Email" 
                                   @oninput="@((e) => loginModel.Email = e.Value?.ToString() ?? "")"
                                   class="form-control" 
                                   id="inputEmail" 
                                   placeholder="name@example.com" 
                                   required />
                            <label for="inputEmail">
                                <i class="fas fa-envelope me-2"></i>Email
                            </label>
                        </div>

                        <div class="form-floating mb-3">
                            <input name="Password" 
                                   type="password" 
                                   value="@loginModel.Password"
                                   @oninput="@((e) => loginModel.Password = e.Value?.ToString() ?? "")"
                                   class="form-control" 
                                   id="inputPassword" 
                                   placeholder="Password"
                                   required />
                            <label for="inputPassword">
                                <i class="fas fa-lock me-2"></i>Mật khẩu
                            </label>
                        </div>

                        <div class="form-check mb-3">
                            <input class="form-check-input" 
                                   type="checkbox" 
                                   name="RememberMe"
                                   @bind="rememberMe" 
                                   id="inputRememberPassword" />
                            <label class="form-check-label" for="inputRememberPassword">
                                Ghi nhớ đăng nhập
                            </label>
                        </div>

                        <input name="ReturnUrl" type="hidden" value="@ReturnUrl" />

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-sign-in-alt me-2"></i>
                                <span>Đăng nhập</span>
                            </button>
                        </div>
                    </form>
                </div>

                <div class="card-footer text-center py-3">
                    <div class="small">
                        <i class="fas fa-info-circle me-1"></i>
                        Tài khoản mặc định: <strong>admin</strong> / <strong>Admin123!</strong>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginDto loginModel = new();
    private bool rememberMe = false;
    private bool isLoading = false;
    private string? errorMessage = null;
    private string? successMessage = null;

    [Parameter]
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            Navigation.NavigateTo("/");
        }

        // Set error message from query parameter
        if (!string.IsNullOrEmpty(Error))
        {
            errorMessage = Error;
        }
    }

    private async Task HandleSubmit()
    {
        if (isLoading) return;

        try
        {
            isLoading = true;
            errorMessage = null;
            successMessage = null;

            var result = await AuthService.SignInAsync(loginModel.Email, loginModel.Password);

            if (result)
            {
                successMessage = "Đăng nhập thành công! Đang chuyển hướng...";
                await InvokeAsync(() => AuthStateProvider.GetAuthenticationStateAsync());
                await Task.Delay(1000);
                var returnUrl = ReturnUrl ?? "/";
                Navigation.NavigateTo(returnUrl, forceLoad: true);
            }
            else
            {
                errorMessage = "Email hoặc mật khẩu không đúng. Vui lòng thử lại.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Có lỗi xảy ra trong quá trình đăng nhập: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private bool IsFieldInvalid(string fieldName)
    {
        return false;
    }

    private void ClearError()
    {
        errorMessage = null;
    }

    private void ClearSuccess()
    {
        successMessage = null;
    }
}